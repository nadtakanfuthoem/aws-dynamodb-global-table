service: kms-stack-us-west-1-nadtakan

frameworkVersion: '3'

provider:
  name: aws
  region: us-west-1
  runtime: nodejs16.x

custom:
  StackName: kms-stack-us-east-1-dev

functions:
  LookupStackOutputs:
    handler: index.handler
    timeout: 30
    role: LambdaExecutionRole
    environment:
      StackName: ${self:custom.StackName}

resources:
  Resources:
    # Cloud Formation Custom Resources
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties: 
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: 'arn:aws:logs:*:*:*'
                - Effect: Allow
                  Action:
                    - cloudformation:DescribeStacks
                  Resource: "*"

    # DBStackReference:
    #   Type: Custom::ExternalStackReference
    #   Properties:
    #     ServiceToken:
    #       Fn::GetAtt: [LookupStackOutputsLambdaFunction, Arn]
    #     StackName: kms-stack-us-east-1-dev

    # SampleLambdaExecutionRole:
    #   DependsOn: DBStackReference
    #   Type: AWS::IAM::Role
    #   Properties:
    #     AssumeRolePolicyDocument: 
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - lambda.amazonaws.com
    #           Action:
    #             - sts:AssumeRole
    #     Path: '/'
    #     Policies:
    #       PolicyName: 
    #         Fn::Join: 
    #           - ''
    #           - - SampleLambdaExecutionRole
    #             - 'Ref': 'AWS::StackName'
    #       PolicyDocument: 
    #         Version: '2012-10-17'
    #         Statement:
    #           - Effect: "Allow"
    #             Action:
    #               - logs:CreateLogGroup
    #               - logs:CreateLogStream
    #               - logs:PutLogEvents
    #             Resource: 'arn:aws:logs:*:*:*'
    #           - Effect: Allow
    #             Action:
    #               - dynamodb:DeleteItem
    #               - dynamodb:GetItem
    #               - dynamodb:PutItem
    #               - dynamodb:Query
    #               - dynamodb:Scan
    #               - dynamodb:UpdateItem
    #             Resource:
    #               Fn::Join:
    #                 - ''
    #                 - - 'arn:aws:dynamodb:'
    #                   - 'Ref': 'AWS::Region'
    #                   - 'Ref': 'AWS::AccountId'
    #                   - ':table/'
    #                   - 'Fn::GetAtt': [DBStackReference,DynamoDBTable]
  #   serviceSharedDynamoDBCustomerManagedKeyReplicaKey:
  #     Type: AWS::KMS::ReplicaKey
  #     Properties: 
  #       Description: DynamoDB CMK Replica Key
  #       Enabled: true
  #       KeyPolicy:
  #         Version: '2012-10-17'
  #         Id: serviceSharedDynamoDBKeyPolicy
  #         Statement:
  #           - Sid: Enable IAM User Permissions
  #             Effect: Allow
  #             Principal:
  #               AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
  #             Action: kms:*
  #             Resource: '*'
  #           - Sid: Allow access for key administrators
  #             Effect: Allow
  #             Principal:
  #               AWS:
  #                 - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Engineer
  #             Action:
  #               - kms:Create*
  #               - kms:Describe*
  #               - kms:Enable*
  #               - kms:List*
  #               - kms:Put*
  #               - kms:Update*
  #               - kms:Revoke*
  #               - kms:Disable*
  #               - kms:Get*
  #               - kms:Delete*
  #               - kms:TagResource
  #               - kms:UntagResource
  #               - kms:ScheduleKeyDeletion
  #               - kms:CancelKeyDeletion
  #             Resource: '*'
  #           - Sid: Allow access through Amazon DynamoDB for all principals in the account that are authorized to use Amazon DynamoDB
  #             Effect: Allow
  #             Principal:
  #               AWS:
  #                 - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Engineer
  #             Action:
  #               - kms:Encrypt
  #               - kms:Decrypt
  #               - kms:ReEncrypt*
  #               - kms:GenerateDataKey*
  #               - kms:DescribeKey
  #               - kms:CreateGrant
  #             Resource: '*'
  #             Condition:
  #               StringLike:
  #                 kms:ViaService: dynamodb.*.amazonaws.com
  #           - Sid:  Allow DynamoDB to get information about the CMK
  #             Effect: Allow
  #             Principal:
  #               Service:
  #                 - dynamodb.amazonaws.com
  #             Action:
  #               - kms:Describe*
  #               - kms:Get*
  #               - kms:List*
  #             Resource: '*'
  #       PrimaryKeyArn: !Sub arn:aws:kms:us-east-1:${AWS::AccountId}:key/mrk-58aa282c64de4986bd58da73f3cf1ea5 # can't ref cross stack region, need work
  #       Tags:
  #         - Key: env
  #           Value: demo-dynamodb-global-table

  # Outputs:
  #   serviceSharedDynamoDBCustomerManagedKeyReplicaKey:
  #     Description: serviceSharedDynamoDBCustomerManagedKeyReplicaKey Arn
  #     Value: !GetAtt serviceSharedDynamoDBCustomerManagedKeyReplicaKey.Arn
  #     Export:
  #       Name: serviceSharedDynamoDBCustomerManagedKeyReplicaKey-${self:provider.region}
    
  #   serviceSharedDynamoDBCustomerManagedKeyReplicaKeyId:
  #     Description: serviceSharedDynamoDBCustomerManagedKeyReplicaKey
  #     Value: !GetAtt serviceSharedDynamoDBCustomerManagedKeyReplicaKey.Arn
  #     Export:
  #       Name: !Sub "${AWS::StackName}-serviceSharedDynamoDBCustomerManagedKeyReplicaKeyId"